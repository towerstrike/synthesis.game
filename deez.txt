diff --git a/compile_commands.json b/compile_commands.json
index 196bc9b..fc13475 100644
--- a/compile_commands.json
+++ b/compile_commands.json
@@ -1,227 +1,227 @@
 [
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/result",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/result",
     "file": "module/core/result"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/box",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/box",
     "file": "module/core/box"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/net",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/net",
     "file": "module/core/net"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/alloc",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/alloc",
     "file": "module/core/alloc"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/limit",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/limit",
     "file": "module/core/limit"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/udp",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/udp",
     "file": "module/core/udp"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/file",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/file",
     "file": "module/core/file"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/hash",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/hash",
     "file": "module/core/hash"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/slice",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/slice",
     "file": "module/core/slice"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/path",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/path",
     "file": "module/core/path"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/stream",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/stream",
     "file": "module/core/stream"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/platform",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/platform",
     "file": "module/core/platform"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/io",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/io",
     "file": "module/core/io"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/meta",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/meta",
     "file": "module/core/meta"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/function",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/function",
     "file": "module/core/function"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/algorithm",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/algorithm",
     "file": "module/core/algorithm"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/atomic",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/atomic",
     "file": "module/core/atomic"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/math",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/math",
     "file": "module/core/math"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/time",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/time",
     "file": "module/core/time"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/optional",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/optional",
     "file": "module/core/optional"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/deque",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/deque",
     "file": "module/core/deque"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/iterator",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/iterator",
     "file": "module/core/iterator"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/map",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/map",
     "file": "module/core/map"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/type",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/type",
     "file": "module/core/type"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/span",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/span",
     "file": "module/core/span"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/tcp",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/tcp",
     "file": "module/core/tcp"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/list",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/list",
     "file": "module/core/list"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/trait",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/trait",
     "file": "module/core/trait"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/compare",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/compare",
     "file": "module/core/compare"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/semantic",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/semantic",
     "file": "module/core/semantic"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/format",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/format",
     "file": "module/core/format"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/binary",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/binary",
     "file": "module/core/binary"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/string",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/string",
     "file": "module/core/string"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/ring",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/ring",
     "file": "module/core/ring"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/set",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/set",
     "file": "module/core/set"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/random",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/random",
     "file": "module/core/random"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/fs",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/fs",
     "file": "module/core/fs"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/thread",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/thread",
     "file": "module/core/thread"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/rc",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/rc",
     "file": "module/core/rc"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/error",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/error",
     "file": "module/core/error"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/str",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/str",
     "file": "module/core/str"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/console",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/console",
     "file": "module/core/console"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/buffer",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/buffer",
     "file": "module/core/buffer"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c module/core/pair",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c module/core/pair",
     "file": "module/core/pair"
   },
   {
-    "directory": "/Users/sol/Documents/synthesis.game",
-    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/Documents/synthesis.game -I/Users/sol/Documents/synthesis.game/module -I/Users/sol/Documents/synthesis.game/src -c src/main",
+    "directory": "/Users/sol/synthesis.game",
+    "command": "/opt/homebrew/bin/clang++ -std=c++20 -I/Users/sol/synthesis.game -I/Users/sol/synthesis.game/module -I/Users/sol/synthesis.game/src -c src/main",
     "file": "src/main"
   }
 ]
\ No newline at end of file
diff --git a/module/core/fp b/module/core/fp
deleted file mode 100644
index 1a79801..0000000
--- a/module/core/fp
+++ /dev/null
@@ -1,68 +0,0 @@
-
-
-export module fp;
-import module type;
-
-// Floating-point algebra and transcendental functions for rendering calculations
-namespace fp
-{
-	// Basic functions
-	export unit add(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit sub(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit mul(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit div(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit mod(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit sqrt(f32* scalar, f32* result, usize count);
-
-	export unit mul_add(f32* lhs, f32* rhs, f32* accum, f32* result, usize count);
-	export unit absolute(f32* scalar, f32* result, usize count);
-	export unit minimum(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit maximum(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit clamp(f32* scalar, f32* min, f32* max, f32* result, usize count);
-	export unit reciprocal(f32* scalar, f32* result, usize count);
-	export unit rev_sqrt(f32* scalar, f32* result, usize count);
-
-	// Transcendental functions
-	export unit sine(f32* scalar, f32* result, usize count);
-	export unit cosine(f32* scalar, f32* result, usize count);
-	export unit tangent(f32* scalar, f32* result, usize count);
-	export unit arc_sine(f32* scalar, f32* result, usize count);
-	export unit arc_cosine(f32* scalar, f32* result, usize count);
-	export unit arc_tangent(f32* scalar, f32* result, usize count);
-	export unit exponential(f32* scalar, f32* result, usize count);
-
-	export unit power(f32* base, f32* exponent, f32* result, usize count);
-	export unit log_natural(f32* scalar, f32* result, usize count);
-	export unit log_base_ten(f32* scalar, f32* result, usize count);
-	export unit log_base_two(f32* scalar, f32* result, usize count);
-
-	// Vector-only functions
-	export unit dot_product(f32* lhs, f32* rhs, f32* result, usize dimensions);
-	export unit cross_product(f32* lhs, f32* rhs, f32* result, usize dimensions);
-	export unit normalize(f32* scalar, f32* result, usize dimensions);
-	export unit length(f32* scalar, f32* result, usize dimensions);
-
-	export unit reflect(f32* incident, f32* normal, f32* result, usize dimensions);
-	export unit refract(f32* incident, f32* normal, f32* eta, f32* result, usize dimensions);
-	export unit distance(f32* lhs, f32* rhs, f32* result, usize dimensions);
-
-	// Comparison functions
-	export unit equal(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit not_equal(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit less(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit greater(f32* lhs, f32* rhs, f32* result, usize count);
-	export unit is_nan(f32* scalar, f32* result, usize count);
-	export unit is_inf(f32* scalar, f32* result, usize count);
-
-	export unit lerp(f32* start, f32* end, f32* t, f32* result, usize count);
-	export unit step(f32* edge, f32* x, f32* result, usize count);
-
-	export unit floor(f32* scalar, f32* result, usize count);
-	export unit ceiling(f32* scalar, f32* result, usize count);
-	export unit round(f32* scalar, f32* result, usize count);
-	export unit truncate(f32* scalar, f32* result, usize count);
-	export unit fraction(f32* scalar, f32* result, usize count);
-
-	export unit sign(f32* scalar, f32* result, usize count);
-
-} // namespace fp
diff --git a/module/core/math b/module/core/math
index 9fbd1d8..cb8ce9d 100644
--- a/module/core/math
+++ b/module/core/math
@@ -1,3 +1,211 @@
+
+
 export module math;
+import module type;
+
+template <typename underlying_type, int fractional_bits>
+struct fixed
+{
+	underlying_type value;
+	static constexpr int scale = fractional_bits;
+};
+
+namespace math
+{
+	template <typename number>
+	concept add = requires(T a, T b) {
+		a + b;
+		a - b;
+		-a;
+		a += b;
+		a -= b;
+	};
+
+	template <typename number>
+	concept multiply = requires(T a, T b) {
+		a * b;
+		a / b;
+		a % b;
+		a *= b;
+		a /= b;
+		a %= b;
+	};
+
+	template <typename number>
+	concept compare = requires(T a, T b) {
+		a == b;
+		a != b;
+		a < b;
+		a <= b;
+		a > b;
+		a >= b;
+		a = b;
+	};
+
+	template <typename number>
+	concept fractional = requires(number n) {
+		n / number{2};
+		n * number{0.5};
+	};
+
+	constexpr u64 max_simd_width =
+#ifdef __AVX512F__
+	    16
+#elif defined(__AVX2__)
+	    8
+#elif defined(__NEON__)
+	    4
+#elif defined(__SSE__)
+	    4
+#elst
+	    1
+#endif
+	    ;
+
+	template <u64 count>
+	concept simd = count >= 1 && count <= max_simd_width;
+
+	template <typename number>
+	concept scalar = add<number> && multiply<number> && compare<number>;
+
+	template <typename number>
+	concept real = fractional<number> && scalar<number>;
+
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit add(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit sub(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd < countt(number* scalar, number* result);
+
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit mul_add(number* lhs, number* rhs, number* accum, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit absolute(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit minimum(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit maximum(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit clamp(number* scalar, number* min, number* max, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit reciprocal(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit rev_sqrt(number* scalar, number* result);
+
+	// Transcendental functions
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit sine(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit cosine(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit tangent(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit arc_sine(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit arc_cosine(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit arc_tangent(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit exponential(number* scalar, number* result);
+
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit power(number* base, number* exponent, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit log_natural(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit log_base_ten(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit log_base_two(number* scalar, number* result);
+
+	// Vector-only functions
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit dot_product(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit cross_product(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit normalize(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit length(number* scalar, number* result);
+
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit reflect(number* incident, number* normal, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit refract(number* incident, number* normal, number* eta, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit distance(number* lhs, number* rhs, number* result);
+
+	// Comparison functions
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit equal(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit not_equal(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit less(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit greater(number* lhs, number* rhs, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit is_nan(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit is_inf(number* scalar, number* result);
+
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit lerp(number* start, number* end, number* t, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit step(number* edge, number* x, number* result);
+
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit floor(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit ceiling(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit round(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit truncate(number* scalar, number* result);
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit fraction(number* scalar, number* result);
 
-// sqrt, sin, cos, abs, min, max, clamp for game math
\ No newline at end of file
+	template <scalar number, u64 count>
+		requires simd<count>
+	export unit sign(number* scalar, number* result);
+} // namespace math
diff --git a/src/main b/src/main
index 34b66e6..597e6a2 100644
--- a/src/main
+++ b/src/main
@@ -6,7 +6,6 @@
 import type;
 
 // Custom entry point (instead of main)
-extern "C" void _start()
+extern "C" unit _start()
 {
-	
 }
